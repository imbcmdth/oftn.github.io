<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US-x-Hixie"> 
<head>
<meta charset="utf-8"/>
<title>OpenBounty</title>
<link rel="stylesheet" type="text/css" href="../../css/global.css"/>
<meta name="viewport" content="width=device-width"/>
</head>
<body>

<div id="container">

<h1 id="openbounty">OpenBounty</h1>

<p>OpenBounty is a site whose job it is to make it easier to sponsor issues or features for open-source projects by adding bounties to it. Developers who implement the feature or fix the issue are awarded their share of the bounty. OpenBounty should support logging in via OpenID, Twitter, and Facebook. We should be able to use the person's Gravatar.</p>

<p>Developers will love the OpenBounty REST API. The API will allow them to access information on profiles and their bounties.</p>

<h2 id="profiles">Profiles</h2>

<p>On the site, a project maintainer can create a profile for his project. The profile is a front for his project and it allows him a Markdown editor to enter any information he would like to associate with his project.</p>

<p>Profiles are automatically created to represent any users joining the site. The owner of a profile can choose which users have control over their profile and which users have what permissions. This is so that large projects can be easily managed by a trusted team of people acting as project maintainers. </p>

<h2 id="bounties">Bounties</h2>

<p>Each profile can have an associated list of “bounties”. Bounties are basically a description of a task which should be performed relating to a project with a dollar amount attached. The project maintainer can choose who can create bounties on his profile. He may want full control over what bounties people can attach money to. By default, no money is attached. Bounties should integrate with services such as <a href="http://developer.github.com/v3/issues/">GitHub</a>, <a href="http://sourceforge.net/apps/trac/sourceforge/wiki/API">Sourceforge</a>, Google Code, and <a href="https://help.launchpad.net/API/">Launchpad</a>.</p>

<p>When a person decides a certain bounty is a good idea, he can put up his own money to fund its development. His name and amount of money will be publicly listed and available to all. The person may decide he likes the idea, but it needs some work. In that case, he may either post a comment, sending a message to the person who created the bounty, or he can create his own bounty with his modifications.</p>

<p>The project maintainers have a certain amount of control over the bounties on their profiles. They can update the status of a bounty which affects what other people can do to a bounty. The bounty status is used to identify the allowed actions which can be performed by users of the site.</p>

<p>A bounty status is one of the following:</p>

<ul>
<li><p>Undecided</p>

<ul><li>Purpose: This is the default status of a bounty. This means the maintainer has yet to review it and make a decision.</li>
<li>Permissions: Users may not attach money to the bounty.</li>
<li>Action: When the maintainer happens to change the status of a bounty back to Undecided, any money currently attached will stay attached.</li></ul></li>
<li><p>Open</p>

<ul><li>Purpose: Used when a maintainer agrees the task described in the bounty would be helpful to his project and welcomes a developer to come along and perform the task. </li>
<li>Permissions: Users may attach money to the bounty.</li>
<li>Action: When the maintainer changes the status of a bounty to Open, any money currently attached will stay attached. Users are notified of the status change so they may attach money.</li></ul></li>
<li><p>Complete</p>

<ul><li>Purpose: Used when a maintainer has taken in work from a developer and has incorporated it into his project. In addition to the change of status, the maintainer, using a form, decides on the profiles who will benefit from the bounty and in what amount.</li>
<li>Permissions: Users may not attach money to the bounty.</li>
<li>Action: After enough time has passed to give the maintainer enough time to change the status if he made a mistake, users are notified of the completion. Once a majority of the users vote to affirm the decision, the money currently attached to the bounty is transferred to the profiles designated by the maintainer. OpenBounty would collect 5% of completed bounties. It will be noted that this money is an estimate only as required to offset operating costs. The status cannot be further changed.</li></ul></li>
<li><p>Closed</p>

<ul><li>Purpose: Used when a maintainer believes that a bounty should or will never be implemented.</li>
<li>Permissions: Users may not attach money to the bounty.</li>
<li>Action: After enough time has passed to give the maintainer enough time to change the status if he made a mistake, the money currently attached to the bounty is refunded to the users who attached money. The status cannot be further changed.</li></ul></li>
</ul>

<h2 id="mergingandsplitting">Merging and Splitting</h2>

<p>Project maintainers may decide that a few bounties are too similar and can perform a merge. A merge operation effectively changes the original bounties’ status to Closed and a new bounty is created. The original bounties will report that they are closed due to the presence of duplicates  and will link to the new bounty. A project maintainer will be able to mark any bounty as closed and as a duplicate of another bounty.</p>

<h2 id="refunds">Refunds</h2>

<p>To perform a refund, money attached to a bounty is converted into credits on the user’s account which can be quickly used to attach to other bounties. Users may withdraw credits on his account to his personal Paypal or Amazon Payments account (depending on which payment system we decide to use).</p>

<h2 id="todolist">Todo list</h2>

<p>The way OpenBounty should be designed is by implementing only the most necessary ideas first. These have to be perfected before we start adding all of the "nice" features.</p>

<ul>
<li>Finish designing the overall idea of how OpenBounty works</li>
<li>Create UI flows, then wireframe. Iterate, then mockup + prototype.</li>
<li>Design database schema</li>
<li>Generate estimates of start-up and operational costs.</li>
<li>Get gf3 to design it, because he's a really good designer but he won't do it free even if he does belong to The ΩF:∅ Foundation.</li>
<li>Create git repository for OpenBounty. It should be kept relatively secret at the moment, so we should get private repositories set up.</li>
<li>Create useful templates from the designs.</li>
<li>Start programming Python.</li>
<li>Finish programming Python. Bring project to a state where it's fully workable with minimum required features.</li>
<li>Either request investment from sephr or put project idea on KickStarter to acquire funds.</li>
<li>Start hosting</li>
<li>More features, iteration, testing, until it is "publishable". </li>
<li>Freeze development and perform lots of testing and quality assurance.</li>
<li>Make sure server and systems can support the heavy load. Publicize: hackernews, engadget, techcruch, mashable, twitter, facebook, slashdot, digg, ars technica, cnet, zdnet, gdgt, gearsofbiz, gigaom, gizmodo, readwriteweb, theverge, techmeme, techradar, twit.tv, valleywag, wired, silicon alley insider, technorati. BOOM. This step should only be taken when we are certain everything will run smoothly. We don't want a bunk deployment!</li>
<li>Sit back, relax, and profit. (this is the most important part)</li>
</ul>

<h2 id="associateddocuments">Associated Documents</h2>

<ul>
<li><a href="http://oftn.org/projects/openbounty/technologies.txt">List of technologies</a></li>
<li><a href="http://oftn.org/projects/openbounty/usage.txt">Example usage</a></li>
<li><a href="http://oftn.org/projects/openbounty/userstories.txt">User stories by GothAlice</a></li>
</ul>

</div>

<script type="application/ecmascript" src="../../js/oftn/site.js"/>

</body>
</html>
